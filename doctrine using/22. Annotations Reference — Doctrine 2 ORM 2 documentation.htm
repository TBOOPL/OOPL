<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
    
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <title>22. Annotations Reference — Doctrine 2 ORM 2 documentation</title>
    <link rel="stylesheet" href="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/bootstrap.css" type="text/css">
    <link rel="stylesheet" href="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/default.css" type="text/css">
    <link rel="stylesheet" href="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/pygments.css" type="text/css">
    <link rel="stylesheet" href="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/layout.css" type="text/css">
    <link rel="stylesheet" href="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/configurationblock.css" type="text/css">
    <script src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../',
        VERSION:     '2',
        COLLAPSE_MODINDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>

    <script type="text/javascript" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/jquery.js"></script>
    <script type="text/javascript" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/configurationblock.js"></script>
    <script type="text/javascript" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/underscore.js"></script>
    <script type="text/javascript" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/configurationblock.js"></script>
    <script type="text/javascript" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/doctools.js"></script>
    <script type="text/javascript" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/configurationblock.js"></script>
    <script src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/bootstrap.js"></script>

    <script type="text/javascript">
    <!--
        $(document).ready(function() {
            $("#versions").change(function() {
                var docsUrl = $(this).val();
                window.location.href = docsUrl;
            });
        });
    -->
    </script>
    <link rel="shortcut icon" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/_static/doctrine.ico">
    <link rel="top" title="Doctrine 2 ORM 2 documentation" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">
    <link rel="next" title="23. PHP Mapping" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/php-mapping.html">
    <link rel="prev" title="21. YAML Mapping" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/yaml-mapping.html">
 
<!-- RTD Extra Head -->



<!-- 
Read the Docs is acting as the canonical URL for your project. 
If you want to change it, more info is available in our docs:
  http://docs.readthedocs.org/en/latest/canonical.html
-->
<link rel="canonical" href="http://doctrine-orm.readthedocs.org/en/latest/reference/annotations-reference.html">

<script type="text/javascript">
  // This is included here because other places don't have access to the pagename variable.
  var READTHEDOCS_DATA = {
    project: "doctrine-orm",
    version: "latest",
    language: "en",
    page: "reference/annotations-reference",
    builder: "sphinx",
    theme: "doctrine",
    docroot: "/docs/en/",
    source_suffix: ".rst",
    api_host: "https://readthedocs.org",
    commit: "193e31f22a1155d9028d7bb8d4a27c9869e303f4"
  }
  // Old variables
  var doc_version = "latest";
  var doc_slug = "doctrine-orm";
  var page_name = "reference/annotations-reference";
  var html_theme = "doctrine";
</script>
<!-- RTD Analytics Code -->
<!-- Included in the header because you don't have a footer block. -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-17997319-1']);
  _gaq.push(['_trackPageview']);


  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!-- end RTD Analytics Code -->
<!-- end RTD <extrahead> -->

  </head>
  <body>
    <div id="wrapper">
      <div id="header">
        <h1 id="h1title"></h1>
        <div id="logo">
          <a href="http://www.doctrine-project.org/">Doctrine - PHP Database Libraries</a>
        </div>
      </div>
      <div id="nav" class="cls">
        <div class="tl cls">
          <ul>
            <li><a target="_top" href="http://docs.doctrine-project.org/">home</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/about">about</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/projects.html">projects</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/projects/orm">orm</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/projects/dbal">dbal</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/blog">blog</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/jira">development</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/contribute">contribute</a></li>
            <li><a class="" target="_top" href="http://www.doctrine-project.org/community">community</a></li>
          </ul>
        </div>
      </div>
      <div id="content" class="cls">
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/genindex.html" title="General Index" accesskey="I">index</a></li>
        <li class="right">
          <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/php-mapping.html" title="23. PHP Mapping" accesskey="N">next</a> |</li>
        <li class="right">
          <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/yaml-mapping.html" title="21. YAML Mapping" accesskey="P">previous</a> |</li>
        <li><a href="http://docs.doctrine-project.org/">Doctrine Homepage</a> »</li>
        <li><a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">Doctrine 2 ORM 2 documentation</a> »</li> 
      </ul>
    </div>  

        <div class="document">
            <div class="documentwrapper">
                <div class="bodywrapper">

              <div class="body">
                
  <div class="section" id="annotations-reference">
<h1>22. Annotations Reference<a class="headerlink" href="#annotations-reference" title="Permalink to this headline">¶</a></h1>
<p>You’ve probably used docblock annotations in some form already,
most likely to provide documentation metadata for a tool like
<tt class="docutils literal"><span class="pre">PHPDocumentor</span></tt> (@author, @link, ...). Docblock annotations are a
tool to embed metadata inside the documentation section which can
then be processed by some tool. Doctrine 2 generalizes the concept
of docblock annotations so that they can be used for any kind of
metadata and so that it is easy to define new docblock annotations.
In order to allow more involved annotation values and to reduce the
chances of clashes with other docblock annotations, the Doctrine 2
docblock annotations feature an alternative syntax that is heavily
inspired by the Annotation syntax introduced in Java 5.</p>
<p>The implementation of these enhanced docblock annotations is
located in the <tt class="docutils literal"><span class="pre">Doctrine\Common\Annotations</span></tt> namespace and
therefore part of the Common package. Doctrine 2 docblock
annotations support namespaces and nested annotations among other
things. The Doctrine 2 ORM defines its own set of docblock
annotations for supplying object-relational mapping metadata.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">If you’re not comfortable with the concept of docblock
annotations, don’t worry, as mentioned earlier Doctrine 2 provides
XML and YAML alternatives and you could easily implement your own
favourite mechanism for defining ORM metadata.</p>
</div>
<p>In this chapter a reference of every Doctrine 2 Annotation is given
with short explanations on their context and usage.</p>
<div class="section" id="index">
<h2>22.1. Index<a class="headerlink" href="#index" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><a class="reference internal" href="#annref-column"><em>@Column</em></a></li>
<li><a class="reference internal" href="#annref-column-result"><em>@ColumnResult</em></a></li>
<li><a class="reference internal" href="#annref-cache"><em>@Cache</em></a></li>
<li><a class="reference internal" href="#annref-changetrackingpolicy"><em>@ChangeTrackingPolicy</em></a></li>
<li><a class="reference internal" href="#annref-discriminatorcolumn"><em>@DiscriminatorColumn</em></a></li>
<li><a class="reference internal" href="#annref-discriminatormap"><em>@DiscriminatorMap</em></a></li>
<li><a class="reference internal" href="#annref-entity"><em>@Entity</em></a></li>
<li><a class="reference internal" href="#annref-entity-result"><em>@EntityResult</em></a></li>
<li><a class="reference internal" href="#annref-field-result"><em>@FieldResult</em></a></li>
<li><a class="reference internal" href="#annref-generatedvalue"><em>@GeneratedValue</em></a></li>
<li><a class="reference internal" href="#annref-haslifecyclecallbacks"><em>@HasLifecycleCallbacks</em></a></li>
<li><a class="reference internal" href="#annref-index"><em>@Index</em></a></li>
<li><a class="reference internal" href="#annref-id"><em>@Id</em></a></li>
<li><a class="reference internal" href="#annref-inheritancetype"><em>@InheritanceType</em></a></li>
<li><a class="reference internal" href="#annref-joincolumn"><em>@JoinColumn</em></a></li>
<li><a class="reference internal" href="#annref-joincolumns"><em>@JoinColumns</em></a></li>
<li><a class="reference internal" href="#annref-jointable"><em>@JoinTable</em></a></li>
<li><a class="reference internal" href="#annref-manytoone"><em>@ManyToOne</em></a></li>
<li><a class="reference internal" href="#annref-manytomany"><em>@ManyToMany</em></a></li>
<li><a class="reference internal" href="#annref-mappedsuperclass"><em>@MappedSuperclass</em></a></li>
<li><a class="reference internal" href="#annref-named-native-query"><em>@NamedNativeQuery</em></a></li>
<li><a class="reference internal" href="#annref-onetoone"><em>@OneToOne</em></a></li>
<li><a class="reference internal" href="#annref-onetomany"><em>@OneToMany</em></a></li>
<li><a class="reference internal" href="#annref-orderby"><em>@OrderBy</em></a></li>
<li><a class="reference internal" href="#annref-postload"><em>@PostLoad</em></a></li>
<li><a class="reference internal" href="#annref-postpersist"><em>@PostPersist</em></a></li>
<li><a class="reference internal" href="#annref-postremove"><em>@PostRemove</em></a></li>
<li><a class="reference internal" href="#annref-postupdate"><em>@PostUpdate</em></a></li>
<li><a class="reference internal" href="#annref-prepersist"><em>@PrePersist</em></a></li>
<li><a class="reference internal" href="#annref-preremove"><em>@PreRemove</em></a></li>
<li><a class="reference internal" href="#annref-preupdate"><em>@PreUpdate</em></a></li>
<li><a class="reference internal" href="#annref-sequencegenerator"><em>@SequenceGenerator</em></a></li>
<li><a class="reference internal" href="#annref-sql-resultset-mapping"><em>@SqlResultSetMapping</em></a></li>
<li><a class="reference internal" href="#annref-table"><em>@Table</em></a></li>
<li><a class="reference internal" href="#annref-uniqueconstraint"><em>@UniqueConstraint</em></a></li>
<li><a class="reference internal" href="#annref-version"><em>@Version</em></a></li>
</ul>
</div>
<div class="section" id="reference">
<h2>22.2. Reference<a class="headerlink" href="#reference" title="Permalink to this headline">¶</a></h2>
<div class="section" id="column">
<span id="annref-column"></span><h3>22.2.1. @Column<a class="headerlink" href="#column" title="Permalink to this headline">¶</a></h3>
<p>Marks an annotated instance variable as “persistent”. It has to be
inside the instance variables PHP DocBlock comment. Any value hold
inside this variable will be saved to and loaded from the database
as part of the lifecycle of the instance variables entity-class.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>type</strong>: Name of the Doctrine Type which is converted between PHP
and Database representation.</li>
</ul>
<p>Optional attributes:</p>
<ul>
<li><p class="first"><strong>name</strong>: By default the property name is used for the database
column name also, however the ‘name’ attribute allows you to
determine the column name.</p>
</li>
<li><p class="first"><strong>length</strong>: Used by the “string” type to determine its maximum
length in the database. Doctrine does not validate the length of a
string values for you.</p>
</li>
<li><p class="first"><strong>precision</strong>: The precision for a decimal (exact numeric) column
(applies only for decimal column), which is the maximum number of
digits that are stored for the values.</p>
</li>
<li><p class="first"><strong>scale</strong>: The scale for a decimal (exact numeric) column (applies
only for decimal column), which represents the number of digits
to the right of the decimal point and must not be greater than
<em>precision</em>.</p>
</li>
<li><p class="first"><strong>unique</strong>: Boolean value to determine if the value of the column
should be unique across all rows of the underlying entities table.</p>
</li>
<li><p class="first"><strong>nullable</strong>: Determines if NULL values allowed for this column.</p>
</li>
<li><p class="first"><strong>options</strong>: Array of additional options:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">default</span></tt>: The default value to set for the column if no value
is supplied.</li>
<li><tt class="docutils literal"><span class="pre">unsigned</span></tt>: Boolean value to determine if the column should
be capable of representing only non-negative integers
(applies only for integer column and might not be supported by
all vendors).</li>
<li><tt class="docutils literal"><span class="pre">fixed</span></tt>: Boolean value to determine if the specified length of
a string column should be fixed or varying (applies only for
string/binary column and might not be supported by all vendors).</li>
<li><tt class="docutils literal"><span class="pre">comment</span></tt>: The comment of the column in the schema (might not
be supported by all vendors).</li>
<li><tt class="docutils literal"><span class="pre">customSchemaOptions</span></tt>: Array of additional schema options
which are mostly vendor specific.</li>
</ul>
</li>
<li><p class="first"><strong>columnDefinition</strong>: DDL SQL snippet that starts after the column
name and specifies the complete (non-portable!) column definition.
This attribute allows to make use of advanced RMDBS features.
However you should make careful use of this feature and the
consequences. SchemaTool will not detect changes on the column correctly
anymore if you use “columnDefinition”.</p>
<p>Additionally you should remember that the “type”
attribute still handles the conversion between PHP and Database
values. If you use this attribute on a column that is used for
joins between tables you should also take a look at
<a class="reference internal" href="#annref-joincolumn"><em>@JoinColumn</em></a>.</p>
</li>
</ul>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">For more detailed information on each attribute, please refer to
the DBAL <tt class="docutils literal"><span class="pre">Schema-Representation</span></tt> documentation.</p>
</div>
<p>Examples:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Column(type="string", length=32, unique=true, nullable=false)</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$username</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @Column(type="string", columnDefinition="CHAR(2) NOT NULL")</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$country</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @Column(type="decimal", precision=2, scale=1)</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$height</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @Column(type="string", length=2, options={"fixed":true, "comment":"Initial letters of first and last name"})</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$initials</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @Column(type="integer", name="login_count" nullable=false, options={"unsigned":true, "default":0})</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$loginCount</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="columnresult">
<span id="annref-column-result"></span><h3>22.2.2. @ColumnResult<a class="headerlink" href="#columnresult" title="Permalink to this headline">¶</a></h3>
<p>References name of a column in the SELECT clause of a SQL query.
Scalar result types can be included in the query result by specifying this annotation in the metadata.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: The name of a column in the SELECT clause of a SQL query</li>
</ul>
</div>
<div class="section" id="cache">
<span id="annref-cache"></span><h3>22.2.3. @Cache<a class="headerlink" href="#cache" title="Permalink to this headline">¶</a></h3>
<p>Add caching strategy to a root entity or a collection.</p>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>usage</strong>: One of <tt class="docutils literal"><span class="pre">READ_ONLY</span></tt>, <tt class="docutils literal"><span class="pre">READ_WRITE</span></tt> or <tt class="docutils literal"><span class="pre">NONSTRICT_READ_WRITE</span></tt>, By default this is <tt class="docutils literal"><span class="pre">READ_ONLY</span></tt>.</li>
<li><strong>region</strong>: An specific region name</li>
</ul>
</div>
<div class="section" id="changetrackingpolicy">
<span id="annref-changetrackingpolicy"></span><h3>22.2.4. @ChangeTrackingPolicy<a class="headerlink" href="#changetrackingpolicy" title="Permalink to this headline">¶</a></h3>
<p>The Change Tracking Policy annotation allows to specify how the
Doctrine 2 UnitOfWork should detect changes in properties of
entities during flush. By default each entity is checked according
to a deferred implicit strategy, which means upon flush UnitOfWork
compares all the properties of an entity to a previously stored
snapshot. This works out of the box, however you might want to
tweak the flush performance where using another change tracking
policy is an interesting option.</p>
<p>The <a class="reference internal" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/change-tracking-policies.html"><em>details on all the available change tracking policies</em></a>
can be found in the configuration section.</p>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @ChangeTrackingPolicy("DEFERRED_IMPLICIT")</span>
<span class="sd"> * @ChangeTrackingPolicy("DEFERRED_EXPLICIT")</span>
<span class="sd"> * @ChangeTrackingPolicy("NOTIFY")</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">User</span> <span class="p">{}</span>
</pre></div>
</div>
</div>
<div class="section" id="discriminatorcolumn">
<span id="annref-discriminatorcolumn"></span><h3>22.2.5. @DiscriminatorColumn<a class="headerlink" href="#discriminatorcolumn" title="Permalink to this headline">¶</a></h3>
<p>This annotation is a required annotation for the topmost/super
class of an inheritance hierarchy. It specifies the details of the
column which saves the name of the class, which the entity is
actually instantiated as.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: The column name of the discriminator. This name is also
used during Array hydration as key to specify the class-name.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>type</strong>: By default this is string.</li>
<li><strong>length</strong>: By default this is 255.</li>
</ul>
</div>
<div class="section" id="discriminatormap">
<span id="annref-discriminatormap"></span><h3>22.2.6. @DiscriminatorMap<a class="headerlink" href="#discriminatormap" title="Permalink to this headline">¶</a></h3>
<p>The discriminator map is a required annotation on the
topmost/super class in an inheritance hierarchy. Its only argument is an
array which defines which class should be saved under
which name in the database. Keys are the database value and values
are the classes, either as fully- or as unqualified class names
depending on whether the classes are in the namespace or not.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @InheritanceType("JOINED")</span>
<span class="sd"> * @DiscriminatorColumn(name="discr", type="string")</span>
<span class="sd"> * @DiscriminatorMap({"person" = "Person", "employee" = "Employee"})</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Person</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="entity">
<span id="annref-entity"></span><h3>22.2.7. @Entity<a class="headerlink" href="#entity" title="Permalink to this headline">¶</a></h3>
<p>Required annotation to mark a PHP class as an entity. Doctrine manages
the persistence of all classes marked as entities.</p>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>repositoryClass</strong>: Specifies the FQCN of a subclass of the
EntityRepository. Use of repositories for entities is encouraged to keep
specialized DQL and SQL operations separated from the Model/Domain
Layer.</li>
<li><strong>readOnly</strong>: (&gt;= 2.1) Specifies that this entity is marked as read only and not
considered for change-tracking. Entities of this type can be persisted
and removed though.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity(repositoryClass="MyProject\UserRepository")</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">User</span>
<span class="p">{</span>
    <span class="c1">//...</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="entityresult">
<span id="annref-entity-result"></span><h3>22.2.8. @EntityResult<a class="headerlink" href="#entityresult" title="Permalink to this headline">¶</a></h3>
<p>References an entity in the SELECT clause of a SQL query.
If this annotation is used, the SQL statement should select all of the columns that are mapped to the entity object.
This should include foreign key columns to related entities.
The results obtained when insufficient data is available are undefined.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>entityClass</strong>: The class of the result.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>fields</strong>: Array of @FieldResult, Maps the columns 
specified in the SELECT list of the query to the properties or fields of
 the entity class.</li>
<li><strong>discriminatorColumn</strong>: Specifies the column name of the column in the SELECT list that is used to determine the type of the entity instance.</li>
</ul>
</div>
<div class="section" id="fieldresult">
<span id="annref-field-result"></span><h3>22.2.9. @FieldResult<a class="headerlink" href="#fieldresult" title="Permalink to this headline">¶</a></h3>
<p>Is used to map the columns specified in the SELECT list of the query to the properties or fields of the entity class.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: Name of the persistent field or property of the class.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>column</strong>: Name of the column in the SELECT clause.</li>
</ul>
</div>
<div class="section" id="generatedvalue">
<span id="annref-generatedvalue"></span><h3>22.2.10. @GeneratedValue<a class="headerlink" href="#generatedvalue" title="Permalink to this headline">¶</a></h3>
<p>Specifies which strategy is used for identifier generation for an
instance variable which is annotated by <a class="reference internal" href="#annref-id"><em>@Id</em></a>. This
annotation is optional and only has meaning when used in
conjunction with @Id.</p>
<p>If this annotation is not specified with @Id the NONE strategy is
used as default.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>strategy</strong>: Set the name of the identifier generation strategy.
Valid values are AUTO, SEQUENCE, TABLE, IDENTITY, UUID, CUSTOM and NONE.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Id</span>
<span class="sd"> * @Column(type="integer")</span>
<span class="sd"> * @GeneratedValue(strategy="IDENTITY")</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$id</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="haslifecyclecallbacks">
<span id="annref-haslifecyclecallbacks"></span><h3>22.2.11. @HasLifecycleCallbacks<a class="headerlink" href="#haslifecyclecallbacks" title="Permalink to this headline">¶</a></h3>
<p>Annotation which has to be set on the entity-class PHP DocBlock to
notify Doctrine that this entity has entity lifecycle callback
annotations set on at least one of its methods. Using @PostLoad,
@PrePersist, @PostPersist, @PreRemove, @PostRemove, @PreUpdate or
@PostUpdate without this marker annotation will make Doctrine
ignore the callbacks.</p>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @HasLifecycleCallbacks</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">User</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @PostPersist</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">sendOptinMail</span><span class="p">()</span> <span class="p">{}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="annref-index">
<span id="id1"></span><h3>22.2.12. @Index<a class="headerlink" href="#annref-index" title="Permalink to this headline">¶</a></h3>
<p>Annotation is used inside the <a class="reference internal" href="#annref-table"><em>@Table</em></a> annotation on
the entity-class level. It provides a hint to the SchemaTool to
generate a database index on the specified table columns. It only
has meaning in the SchemaTool schema generation context.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: Name of the Index</li>
<li><strong>columns</strong>: Array of columns.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>options</strong>: Array of platform specific options:<ul>
<li><tt class="docutils literal"><span class="pre">where</span></tt>: SQL WHERE condition to be used for partial indexes. It will
only have effect on supported platforms.</li>
</ul>
</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @Table(name="ecommerce_products",indexes={@Index(name="search_idx", columns={"name", "email"})})</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">ECommerceProduct</span>
<span class="p">{</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="annref-id">
<span id="id"></span><h3>22.2.13. @Id<a class="headerlink" href="#annref-id" title="Permalink to this headline">¶</a></h3>
<p>The annotated instance variable will be marked as entity
identifier, the primary key in the database. This annotation is a
marker only and has no required or optional attributes. For
entities that have multiple identifier columns each column has to
be marked with @Id.</p>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Id</span>
<span class="sd"> * @Column(type="integer")</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$id</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="inheritancetype">
<span id="annref-inheritancetype"></span><h3>22.2.14. @InheritanceType<a class="headerlink" href="#inheritancetype" title="Permalink to this headline">¶</a></h3>
<p>In an inheritance hierarchy you have to use this annotation on the
topmost/super class to define which strategy should be used for
inheritance. Currently Single Table and Class Table Inheritance are
supported.</p>
<p>This annotation has always been used in conjunction with the
<a class="reference internal" href="#annref-discriminatormap"><em>@DiscriminatorMap</em></a> and
<a class="reference internal" href="#annref-discriminatorcolumn"><em>@DiscriminatorColumn</em></a> annotations.</p>
<p>Examples:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @InheritanceType("SINGLE_TABLE")</span>
<span class="sd"> * @DiscriminatorColumn(name="discr", type="string")</span>
<span class="sd"> * @DiscriminatorMap({"person" = "Person", "employee" = "Employee"})</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Person</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>

<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @InheritanceType("JOINED")</span>
<span class="sd"> * @DiscriminatorColumn(name="discr", type="string")</span>
<span class="sd"> * @DiscriminatorMap({"person" = "Person", "employee" = "Employee"})</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Person</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="joincolumn">
<span id="annref-joincolumn"></span><h3>22.2.15. @JoinColumn<a class="headerlink" href="#joincolumn" title="Permalink to this headline">¶</a></h3>
<p>This annotation is used in the context of relations in
<a class="reference internal" href="#annref-manytoone"><em>@ManyToOne</em></a>, <a class="reference internal" href="#annref-onetoone"><em>@OneToOne</em></a> fields
and in the Context of <a class="reference internal" href="#annref-jointable"><em>@JoinTable</em></a> nested inside
a @ManyToMany. This annotation is not required. If it is not
specified the attributes <em>name</em> and <em>referencedColumnName</em> are
inferred from the table and primary key names.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: Column name that holds the foreign key identifier for
this relation. In the context of @JoinTable it specifies the column
name in the join table.</li>
<li><strong>referencedColumnName</strong>: Name of the primary key identifier that
is used for joining of this relation.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>unique</strong>: Determines whether this relation is exclusive between the
affected entities and should be enforced as such on the database
constraint level. Defaults to false.</li>
<li><strong>nullable</strong>: Determine whether the related entity is required, or if
null is an allowed state for the relation. Defaults to true.</li>
<li><strong>onDelete</strong>: Cascade Action (Database-level)</li>
<li><strong>columnDefinition</strong>: DDL SQL snippet that starts after the column
name and specifies the complete (non-portable!) column definition.
This attribute enables the use of advanced RMDBS features. Using
this attribute on @JoinColumn is necessary if you need slightly
different column definitions for joining columns, for example
regarding NULL/NOT NULL defaults. However by default a
“columnDefinition” attribute on <a class="reference internal" href="#annref-column"><em>@Column</em></a> also sets
the related @JoinColumn’s columnDefinition. This is necessary to
make foreign keys work.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @OneToOne(targetEntity="Customer")</span>
<span class="sd"> * @JoinColumn(name="customer_id", referencedColumnName="id")</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="nv">$customer</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="joincolumns">
<span id="annref-joincolumns"></span><h3>22.2.16. @JoinColumns<a class="headerlink" href="#joincolumns" title="Permalink to this headline">¶</a></h3>
<p>An array of @JoinColumn annotations for a
<a class="reference internal" href="#annref-manytoone"><em>@ManyToOne</em></a> or <a class="reference internal" href="#annref-onetoone"><em>@OneToOne</em></a>
relation with an entity that has multiple identifiers.</p>
</div>
<div class="section" id="jointable">
<span id="annref-jointable"></span><h3>22.2.17. @JoinTable<a class="headerlink" href="#jointable" title="Permalink to this headline">¶</a></h3>
<p>Using <a class="reference internal" href="#annref-onetomany"><em>@OneToMany</em></a> or
<a class="reference internal" href="#annref-manytomany"><em>@ManyToMany</em></a> on the owning side of the relation
requires to specify the @JoinTable annotation which describes the
details of the database join table. If you do not specify
@JoinTable on these relations reasonable mapping defaults apply
using the affected table and the column names.</p>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>name</strong>: Database name of the join-table</li>
<li><strong>joinColumns</strong>: An array of @JoinColumn annotations describing the
join-relation between the owning entities table and the join table.</li>
<li><strong>inverseJoinColumns</strong>: An array of @JoinColumn annotations
describing the join-relation between the inverse entities table and
the join table.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @ManyToMany(targetEntity="Phonenumber")</span>
<span class="sd"> * @JoinTable(name="users_phonenumbers",</span>
<span class="sd"> *      joinColumns={@JoinColumn(name="user_id", referencedColumnName="id")},</span>
<span class="sd"> *      inverseJoinColumns={@JoinColumn(name="phonenumber_id", referencedColumnName="id", unique=true)}</span>
<span class="sd"> * )</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="nv">$phonenumbers</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="manytoone">
<span id="annref-manytoone"></span><h3>22.2.18. @ManyToOne<a class="headerlink" href="#manytoone" title="Permalink to this headline">¶</a></h3>
<p>Defines that the annotated instance variable holds a reference that
describes a many-to-one relationship between two entities.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>targetEntity</strong>: FQCN of the referenced target entity. Can be the
unqualified class name if both classes are in the same namespace.
<em>IMPORTANT:</em> No leading backslash!</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>cascade</strong>: Cascade Option</li>
<li><strong>fetch</strong>: One of LAZY or EAGER</li>
<li>inversedBy - The inversedBy attribute designates the field in
the entity that is the inverse side of the relationship.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @ManyToOne(targetEntity="Cart", cascade={"all"}, fetch="EAGER")</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="nv">$cart</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="manytomany">
<span id="annref-manytomany"></span><h3>22.2.19. @ManyToMany<a class="headerlink" href="#manytomany" title="Permalink to this headline">¶</a></h3>
<p>Defines that the annotated instance variable holds a many-to-many relationship
between two entities. <a class="reference internal" href="#annref-jointable"><em>@JoinTable</em></a> is an
additional, optional annotation that has reasonable default
configuration values using the table and names of the two related
entities.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>targetEntity</strong>: FQCN of the referenced target entity. Can be the
unqualified class name if both classes are in the same namespace.
<em>IMPORTANT:</em> No leading backslash!</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>mappedBy</strong>: This option specifies the property name on the
targetEntity that is the owning side of this relation. It is a
required attribute for the inverse side of a relationship.</li>
<li><strong>inversedBy</strong>: The inversedBy attribute designates the field in the
entity that is the inverse side of the relationship.</li>
<li><strong>cascade</strong>: Cascade Option</li>
<li><strong>fetch</strong>: One of LAZY, EXTRA_LAZY or EAGER</li>
<li><strong>indexBy</strong>: Index the collection by a field on the target entity.</li>
</ul>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">For ManyToMany bidirectional relationships either side may
be the owning side (the side that defines the @JoinTable and/or
does not make use of the mappedBy attribute, thus using a default
join table).</p>
</div>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * Owning Side</span>
<span class="sd"> *</span>
<span class="sd"> * @ManyToMany(targetEntity="Group", inversedBy="features")</span>
<span class="sd"> * @JoinTable(name="user_groups",</span>
<span class="sd"> *      joinColumns={@JoinColumn(name="user_id", referencedColumnName="id")},</span>
<span class="sd"> *      inverseJoinColumns={@JoinColumn(name="group_id", referencedColumnName="id")}</span>
<span class="sd"> *      )</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="nv">$groups</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * Inverse Side</span>
<span class="sd"> *</span>
<span class="sd"> * @ManyToMany(targetEntity="User", mappedBy="groups")</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="nv">$features</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="mappedsuperclass">
<span id="annref-mappedsuperclass"></span><h3>22.2.20. @MappedSuperclass<a class="headerlink" href="#mappedsuperclass" title="Permalink to this headline">¶</a></h3>
<p>A mapped superclass is an abstract or concrete class that provides
persistent entity state and mapping information for its subclasses,
but which is not itself an entity. This annotation is specified on
the Class docblock and has no additional attributes.</p>
<p>The @MappedSuperclass annotation cannot be used in conjunction with
@Entity. See the Inheritance Mapping section for
<a class="reference internal" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/inheritance-mapping.html"><em>more details on the restrictions of mapped superclasses</em></a>.</p>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>repositoryClass</strong>: (&gt;= 2.2) Specifies the FQCN of a subclass of the EntityRepository.
That will be inherited for all subclasses of that Mapped Superclass.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @MappedSuperclass</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">MappedSuperclassBase</span>
<span class="p">{</span>
    <span class="c1">// ... fields and methods</span>
<span class="p">}</span>

<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">EntitySubClassFoo</span> <span class="k">extends</span> <span class="nx">MappedSuperclassBase</span>
<span class="p">{</span>
    <span class="c1">// ... fields and methods</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="namednativequery">
<span id="annref-named-native-query"></span><h3>22.2.21. @NamedNativeQuery<a class="headerlink" href="#namednativequery" title="Permalink to this headline">¶</a></h3>
<p>Is used to specify a native SQL named query.
The NamedNativeQuery annotation can be applied to an entity or mapped superclass.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: The name used to refer to the query with the EntityManager methods that create query objects.</li>
<li><strong>query</strong>: The SQL query string.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>resultClass</strong>: The class of the result.</li>
<li><strong>resultSetMapping</strong>: The name of a SqlResultSetMapping, as defined in metadata.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @NamedNativeQueries({</span>
<span class="sd"> *      @NamedNativeQuery(</span>
<span class="sd"> *          name            = "fetchJoinedAddress",</span>
<span class="sd"> *          resultSetMapping= "mappingJoinedAddress",</span>
<span class="sd"> *          query           = "SELECT u.id, u.name, u.status, a.id AS a_id, a.country, a.zip, a.city FROM cms_users u INNER JOIN cms_addresses a ON u.id = a.user_id WHERE u.username = ?"</span>
<span class="sd"> *      ),</span>
<span class="sd"> * })</span>
<span class="sd"> * @SqlResultSetMappings({</span>
<span class="sd"> *      @SqlResultSetMapping(</span>
<span class="sd"> *          name    = "mappingJoinedAddress",</span>
<span class="sd"> *          entities= {</span>
<span class="sd"> *              @EntityResult(</span>
<span class="sd"> *                  entityClass = "__CLASS__",</span>
<span class="sd"> *                  fields      = {</span>
<span class="sd"> *                      @FieldResult(name = "id"),</span>
<span class="sd"> *                      @FieldResult(name = "name"),</span>
<span class="sd"> *                      @FieldResult(name = "status"),</span>
<span class="sd"> *                      @FieldResult(name = "address.zip"),</span>
<span class="sd"> *                      @FieldResult(name = "address.city"),</span>
<span class="sd"> *                      @FieldResult(name = "address.country"),</span>
<span class="sd"> *                      @FieldResult(name = "address.id", column = "a_id"),</span>
<span class="sd"> *                  }</span>
<span class="sd"> *              )</span>
<span class="sd"> *          }</span>
<span class="sd"> *      )</span>
<span class="sd"> * })</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">User</span>
<span class="p">{</span>
    <span class="sd">/** @Id @Column(type="integer") @GeneratedValue */</span>
    <span class="k">public</span> <span class="nv">$id</span><span class="p">;</span>

    <span class="sd">/** @Column(type="string", length=50, nullable=true) */</span>
    <span class="k">public</span> <span class="nv">$status</span><span class="p">;</span>

    <span class="sd">/** @Column(type="string", length=255, unique=true) */</span>
    <span class="k">public</span> <span class="nv">$username</span><span class="p">;</span>

    <span class="sd">/** @Column(type="string", length=255) */</span>
    <span class="k">public</span> <span class="nv">$name</span><span class="p">;</span>

    <span class="sd">/** @OneToOne(targetEntity="Address") */</span>
    <span class="k">public</span> <span class="nv">$address</span><span class="p">;</span>

    <span class="c1">// ....</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="onetoone">
<span id="annref-onetoone"></span><h3>22.2.22. @OneToOne<a class="headerlink" href="#onetoone" title="Permalink to this headline">¶</a></h3>
<p>The @OneToOne annotation works almost exactly as the
<a class="reference internal" href="#annref-manytoone"><em>@ManyToOne</em></a> with one additional option which can
be specified. The configuration defaults for
<a class="reference internal" href="#annref-joincolumn"><em>@JoinColumn</em></a> using the target entity table and
primary key column names apply here too.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>targetEntity</strong>: FQCN of the referenced target entity. Can be the
unqualified class name if both classes are in the same namespace.
<em>IMPORTANT:</em> No leading backslash!</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>cascade</strong>: Cascade Option</li>
<li><strong>fetch</strong>: One of LAZY or EAGER</li>
<li><strong>orphanRemoval</strong>: Boolean that specifies if orphans, inverse
OneToOne entities that are not connected to any owning instance,
should be removed by Doctrine. Defaults to false.</li>
<li><strong>inversedBy</strong>: The inversedBy attribute designates the field in the
entity that is the inverse side of the relationship.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @OneToOne(targetEntity="Customer")</span>
<span class="sd"> * @JoinColumn(name="customer_id", referencedColumnName="id")</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="nv">$customer</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="onetomany">
<span id="annref-onetomany"></span><h3>22.2.23. @OneToMany<a class="headerlink" href="#onetomany" title="Permalink to this headline">¶</a></h3>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>targetEntity</strong>: FQCN of the referenced target entity. Can be the
unqualified class name if both classes are in the same namespace.
<em>IMPORTANT:</em> No leading backslash!</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>cascade</strong>: Cascade Option</li>
<li><strong>orphanRemoval</strong>: Boolean that specifies if orphans, inverse
OneToOne entities that are not connected to any owning instance,
should be removed by Doctrine. Defaults to false.</li>
<li><strong>mappedBy</strong>: This option specifies the property name on the
targetEntity that is the owning side of this relation. Its a
required attribute for the inverse side of a relationship.</li>
<li><strong>fetch</strong>: One of LAZY, EXTRA_LAZY or EAGER.</li>
<li><strong>indexBy</strong>: Index the collection by a field on the target entity.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @OneToMany(targetEntity="Phonenumber", mappedBy="user", cascade={"persist", "remove", "merge"}, orphanRemoval=true)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="nv">$phonenumbers</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="orderby">
<span id="annref-orderby"></span><h3>22.2.24. @OrderBy<a class="headerlink" href="#orderby" title="Permalink to this headline">¶</a></h3>
<p>Optional annotation that can be specified with a
<a class="reference internal" href="#annref-manytomany"><em>@ManyToMany</em></a> or <a class="reference internal" href="#annref-onetomany"><em>@OneToMany</em></a>
annotation to specify by which criteria the collection should be
retrieved from the database by using an ORDER BY clause.</p>
<p>This annotation requires a single non-attributed value with an DQL
snippet:</p>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @ManyToMany(targetEntity="Group")</span>
<span class="sd"> * @OrderBy({"name" = "ASC"})</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="nv">$groups</span><span class="p">;</span>
</pre></div>
</div>
<p>The DQL Snippet in OrderBy is only allowed to consist of
unqualified, unquoted field names and of an optional ASC/DESC
positional statement. Multiple Fields are separated by a comma (,).
The referenced field names have to exist on the <tt class="docutils literal"><span class="pre">targetEntity</span></tt>
class of the <tt class="docutils literal"><span class="pre">@ManyToMany</span></tt> or <tt class="docutils literal"><span class="pre">@OneToMany</span></tt> annotation.</p>
</div>
<div class="section" id="postload">
<span id="annref-postload"></span><h3>22.2.25. @PostLoad<a class="headerlink" href="#postload" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PostLoad event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="postpersist">
<span id="annref-postpersist"></span><h3>22.2.26. @PostPersist<a class="headerlink" href="#postpersist" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PostPersist event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="postremove">
<span id="annref-postremove"></span><h3>22.2.27. @PostRemove<a class="headerlink" href="#postremove" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PostRemove event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="postupdate">
<span id="annref-postupdate"></span><h3>22.2.28. @PostUpdate<a class="headerlink" href="#postupdate" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PostUpdate event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="prepersist">
<span id="annref-prepersist"></span><h3>22.2.29. @PrePersist<a class="headerlink" href="#prepersist" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PrePersist event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="preremove">
<span id="annref-preremove"></span><h3>22.2.30. @PreRemove<a class="headerlink" href="#preremove" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PreRemove event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="preupdate">
<span id="annref-preupdate"></span><h3>22.2.31. @PreUpdate<a class="headerlink" href="#preupdate" title="Permalink to this headline">¶</a></h3>
<p>Marks a method on the entity to be called as a @PreUpdate event.
Only works with @HasLifecycleCallbacks in the entity class PHP
DocBlock.</p>
</div>
<div class="section" id="sequencegenerator">
<span id="annref-sequencegenerator"></span><h3>22.2.32. @SequenceGenerator<a class="headerlink" href="#sequencegenerator" title="Permalink to this headline">¶</a></h3>
<p>For use with @GeneratedValue(strategy=”SEQUENCE”) this
annotation allows to specify details about the sequence, such as
the increment size and initial values of the sequence.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>sequenceName</strong>: Name of the sequence</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>allocationSize</strong>: Increment the sequence by the allocation size
when its fetched. A value larger than 1 allows optimization for
scenarios where you create more than one new entity per request.
Defaults to 10</li>
<li><strong>initialValue</strong>: Where the sequence starts, defaults to 1.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Id</span>
<span class="sd"> * @GeneratedValue(strategy="SEQUENCE")</span>
<span class="sd"> * @Column(type="integer")</span>
<span class="sd"> * @SequenceGenerator(sequenceName="tablename_seq", initialValue=1, allocationSize=100)</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$id</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="sqlresultsetmapping">
<span id="annref-sql-resultset-mapping"></span><h3>22.2.33. @SqlResultSetMapping<a class="headerlink" href="#sqlresultsetmapping" title="Permalink to this headline">¶</a></h3>
<p>The SqlResultSetMapping annotation is used to specify the mapping of the result of a native SQL query.
The SqlResultSetMapping annotation can be applied to an entity or mapped superclass.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: The name given to the result set mapping, and used to refer to it in the methods of the Query API.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>entities</strong>: Array of @EntityResult, Specifies the result set mapping to entities.</li>
<li><strong>columns</strong>: Array of @ColumnResult, Specifies the result set mapping to scalar values.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @NamedNativeQueries({</span>
<span class="sd"> *      @NamedNativeQuery(</span>
<span class="sd"> *          name            = "fetchUserPhonenumberCount",</span>
<span class="sd"> *          resultSetMapping= "mappingUserPhonenumberCount",</span>
<span class="sd"> *          query           = "SELECT id, name, status, COUNT(phonenumber) AS numphones FROM cms_users INNER JOIN cms_phonenumbers ON id = user_id WHERE username IN (?) GROUP BY id, name, status, username ORDER BY username"</span>
<span class="sd"> *      ),</span>
<span class="sd"> *      @NamedNativeQuery(</span>
<span class="sd"> *          name            = "fetchMultipleJoinsEntityResults",</span>
<span class="sd"> *          resultSetMapping= "mappingMultipleJoinsEntityResults",</span>
<span class="sd"> *          query           = "SELECT u.id AS u_id, u.name AS u_name, u.status AS u_status, a.id AS a_id, a.zip AS a_zip, a.country AS a_country, COUNT(p.phonenumber) AS numphones FROM cms_users u INNER JOIN cms_addresses a ON u.id = a.user_id INNER JOIN cms_phonenumbers p ON u.id = p.user_id GROUP BY u.id, u.name, u.status, u.username, a.id, a.zip, a.country ORDER BY u.username"</span>
<span class="sd"> *      ),</span>
<span class="sd"> * })</span>
<span class="sd"> * @SqlResultSetMappings({</span>
<span class="sd"> *      @SqlResultSetMapping(</span>
<span class="sd"> *          name    = "mappingUserPhonenumberCount",</span>
<span class="sd"> *          entities= {</span>
<span class="sd"> *              @EntityResult(</span>
<span class="sd"> *                  entityClass = "User",</span>
<span class="sd"> *                  fields      = {</span>
<span class="sd"> *                      @FieldResult(name = "id"),</span>
<span class="sd"> *                      @FieldResult(name = "name"),</span>
<span class="sd"> *                      @FieldResult(name = "status"),</span>
<span class="sd"> *                  }</span>
<span class="sd"> *              )</span>
<span class="sd"> *          },</span>
<span class="sd"> *          columns = {</span>
<span class="sd"> *              @ColumnResult("numphones")</span>
<span class="sd"> *          }</span>
<span class="sd"> *      ),</span>
<span class="sd"> *      @SqlResultSetMapping(</span>
<span class="sd"> *          name    = "mappingMultipleJoinsEntityResults",</span>
<span class="sd"> *          entities= {</span>
<span class="sd"> *              @EntityResult(</span>
<span class="sd"> *                  entityClass = "__CLASS__",</span>
<span class="sd"> *                  fields      = {</span>
<span class="sd"> *                      @FieldResult(name = "id",       column="u_id"),</span>
<span class="sd"> *                      @FieldResult(name = "name",     column="u_name"),</span>
<span class="sd"> *                      @FieldResult(name = "status",   column="u_status"),</span>
<span class="sd"> *                  }</span>
<span class="sd"> *              ),</span>
<span class="sd"> *              @EntityResult(</span>
<span class="sd"> *                  entityClass = "Address",</span>
<span class="sd"> *                  fields      = {</span>
<span class="sd"> *                      @FieldResult(name = "id",       column="a_id"),</span>
<span class="sd"> *                      @FieldResult(name = "zip",      column="a_zip"),</span>
<span class="sd"> *                      @FieldResult(name = "country",  column="a_country"),</span>
<span class="sd"> *                  }</span>
<span class="sd"> *              )</span>
<span class="sd"> *          },</span>
<span class="sd"> *          columns = {</span>
<span class="sd"> *              @ColumnResult("numphones")</span>
<span class="sd"> *          }</span>
<span class="sd"> *      )</span>
<span class="sd"> *})</span>
<span class="sd"> */</span>
 <span class="k">class</span> <span class="nc">User</span>
<span class="p">{</span>
    <span class="sd">/** @Id @Column(type="integer") @GeneratedValue */</span>
    <span class="k">public</span> <span class="nv">$id</span><span class="p">;</span>

    <span class="sd">/** @Column(type="string", length=50, nullable=true) */</span>
    <span class="k">public</span> <span class="nv">$status</span><span class="p">;</span>

    <span class="sd">/** @Column(type="string", length=255, unique=true) */</span>
    <span class="k">public</span> <span class="nv">$username</span><span class="p">;</span>

    <span class="sd">/** @Column(type="string", length=255) */</span>
    <span class="k">public</span> <span class="nv">$name</span><span class="p">;</span>

    <span class="sd">/** @OneToMany(targetEntity="Phonenumber") */</span>
    <span class="k">public</span> <span class="nv">$phonenumbers</span><span class="p">;</span>

    <span class="sd">/** @OneToOne(targetEntity="Address") */</span>
    <span class="k">public</span> <span class="nv">$address</span><span class="p">;</span>

    <span class="c1">// ....</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="table">
<span id="annref-table"></span><h3>22.2.34. @Table<a class="headerlink" href="#table" title="Permalink to this headline">¶</a></h3>
<p>Annotation describes the table an entity is persisted in. It is
placed on the entity-class PHP DocBlock and is optional. If it is
not specified the table name will default to the entity’s
unqualified classname.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: Name of the table</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>indexes</strong>: Array of @Index annotations</li>
<li><strong>uniqueConstraints</strong>: Array of @UniqueConstraint annotations.</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @Table(name="user",</span>
<span class="sd"> *      uniqueConstraints={@UniqueConstraint(name="user_unique",columns={"username"})},</span>
<span class="sd"> *      indexes={@Index(name="user_idx", columns={"email"})}</span>
<span class="sd"> * )</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">User</span> <span class="p">{</span> <span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="uniqueconstraint">
<span id="annref-uniqueconstraint"></span><h3>22.2.35. @UniqueConstraint<a class="headerlink" href="#uniqueconstraint" title="Permalink to this headline">¶</a></h3>
<p>Annotation is used inside the <a class="reference internal" href="#annref-table"><em>@Table</em></a> annotation on
the entity-class level. It allows to hint the SchemaTool to
generate a database unique constraint on the specified table
columns. It only has meaning in the SchemaTool schema generation
context.</p>
<p>Required attributes:</p>
<ul class="simple">
<li><strong>name</strong>: Name of the Index</li>
<li><strong>columns</strong>: Array of columns.</li>
</ul>
<p>Optional attributes:</p>
<ul class="simple">
<li><strong>options</strong>: Array of platform specific options:<ul>
<li><tt class="docutils literal"><span class="pre">where</span></tt>: SQL WHERE condition to be used for partial indexes. It will
only have effect on supported platforms.</li>
</ul>
</li>
</ul>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Entity</span>
<span class="sd"> * @Table(name="ecommerce_products",uniqueConstraints={@UniqueConstraint(name="search_idx", columns={"name", "email"})})</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">ECommerceProduct</span>
<span class="p">{</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="version">
<span id="annref-version"></span><h3>22.2.36. @Version<a class="headerlink" href="#version" title="Permalink to this headline">¶</a></h3>
<p>Marker annotation that defines a specified column as version
attribute used in an optimistic locking scenario. It only works on
<a class="reference internal" href="#annref-column"><em>@Column</em></a> annotations that have the type integer or
datetime. Combining @Version with <a class="reference internal" href="#annref-id"><em>@Id</em></a> is not supported.</p>
<p>Example:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="sd">/**</span>
<span class="sd"> * @Column(type="integer")</span>
<span class="sd"> * @Version</span>
<span class="sd"> */</span>
<span class="k">protected</span> <span class="nv">$version</span><span class="p">;</span>
</pre></div>
</div>
</div>
</div>
</div>


              </div>
                </div>

            </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">
             
                <h3>Project Versions</h3>

                <select name="versions" id="versions">
            
            <option selected="selected" value="http://readthedocs.org/en/latest/">latest</option>
            
            <option value="http://readthedocs.org/en/stable/">stable</option>
            
                </select>
            
            <div id="searchbox" style="">
              <h3>Search</h3>
                <form class="search" action="http://readthedocs.org/search/project/" method="get">
                  <input name="q" size="18" type="text">
                  <input value="Go" type="submit">
                  <input name="selected_facets" value="project:Doctrine ORM" type="hidden">
                </form>
            </div>
            <h3><a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">Table Of Contents</a></h3>
            <ul>
<li><a class="reference internal" href="#">22. Annotations Reference</a><ul>
<li><a class="reference internal" href="#index">22.1. Index</a></li>
<li><a class="reference internal" href="#reference">22.2. Reference</a><ul>
<li><a class="reference internal" href="#column">22.2.1. @Column</a></li>
<li><a class="reference internal" href="#columnresult">22.2.2. @ColumnResult</a></li>
<li><a class="reference internal" href="#cache">22.2.3. @Cache</a></li>
<li><a class="reference internal" href="#changetrackingpolicy">22.2.4. @ChangeTrackingPolicy</a></li>
<li><a class="reference internal" href="#discriminatorcolumn">22.2.5. @DiscriminatorColumn</a></li>
<li><a class="reference internal" href="#discriminatormap">22.2.6. @DiscriminatorMap</a></li>
<li><a class="reference internal" href="#entity">22.2.7. @Entity</a></li>
<li><a class="reference internal" href="#entityresult">22.2.8. @EntityResult</a></li>
<li><a class="reference internal" href="#fieldresult">22.2.9. @FieldResult</a></li>
<li><a class="reference internal" href="#generatedvalue">22.2.10. @GeneratedValue</a></li>
<li><a class="reference internal" href="#haslifecyclecallbacks">22.2.11. @HasLifecycleCallbacks</a></li>
<li><a class="reference internal" href="#annref-index">22.2.12. @Index</a></li>
<li><a class="reference internal" href="#annref-id">22.2.13. @Id</a></li>
<li><a class="reference internal" href="#inheritancetype">22.2.14. @InheritanceType</a></li>
<li><a class="reference internal" href="#joincolumn">22.2.15. @JoinColumn</a></li>
<li><a class="reference internal" href="#joincolumns">22.2.16. @JoinColumns</a></li>
<li><a class="reference internal" href="#jointable">22.2.17. @JoinTable</a></li>
<li><a class="reference internal" href="#manytoone">22.2.18. @ManyToOne</a></li>
<li><a class="reference internal" href="#manytomany">22.2.19. @ManyToMany</a></li>
<li><a class="reference internal" href="#mappedsuperclass">22.2.20. @MappedSuperclass</a></li>
<li><a class="reference internal" href="#namednativequery">22.2.21. @NamedNativeQuery</a></li>
<li><a class="reference internal" href="#onetoone">22.2.22. @OneToOne</a></li>
<li><a class="reference internal" href="#onetomany">22.2.23. @OneToMany</a></li>
<li><a class="reference internal" href="#orderby">22.2.24. @OrderBy</a></li>
<li><a class="reference internal" href="#postload">22.2.25. @PostLoad</a></li>
<li><a class="reference internal" href="#postpersist">22.2.26. @PostPersist</a></li>
<li><a class="reference internal" href="#postremove">22.2.27. @PostRemove</a></li>
<li><a class="reference internal" href="#postupdate">22.2.28. @PostUpdate</a></li>
<li><a class="reference internal" href="#prepersist">22.2.29. @PrePersist</a></li>
<li><a class="reference internal" href="#preremove">22.2.30. @PreRemove</a></li>
<li><a class="reference internal" href="#preupdate">22.2.31. @PreUpdate</a></li>
<li><a class="reference internal" href="#sequencegenerator">22.2.32. @SequenceGenerator</a></li>
<li><a class="reference internal" href="#sqlresultsetmapping">22.2.33. @SqlResultSetMapping</a></li>
<li><a class="reference internal" href="#table">22.2.34. @Table</a></li>
<li><a class="reference internal" href="#uniqueconstraint">22.2.35. @UniqueConstraint</a></li>
<li><a class="reference internal" href="#version">22.2.36. @Version</a></li>
</ul>
</li>
</ul>
</li>
</ul>

            <h4>Previous topic</h4>
            <p class="topless"><a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/yaml-mapping.html" title="previous chapter">21. YAML Mapping</a></p>
            <h4>Next topic</h4>
            <p class="topless"><a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/php-mapping.html" title="next chapter">23. PHP Mapping</a></p>
            <h3>This Page</h3>
            <ul class="this-page-menu">
              <li><a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/_sources/reference/annotations-reference.txt" rel="nofollow">Show Source</a></li>
            </ul>
        </div>
      </div>
          <div class="clearer"></div>
        </div>
          <div class="footer">
              © Copyright 2010-12, Doctrine Project Team.
              Created using <a href="http://sphinx.pocoo.org/">Sphinx</a> 1.2.2.
            <br>
            <a target="_BLANK" href="http://www.servergrove.com/"><img src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/servergrove.jpg"></a>      <br><br>
            <form action="https://www.paypal.com/cgi-bin/webscr" method="post">
              <input name="cmd" value="_s-xclick" type="hidden">
              <input name="hosted_button_id" value="BAE2E3XANQ77Y" type="hidden">
              <input src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/btn_donateCC_LG.gif" name="submit" alt="PayPal - The safer, easier way to pay online!" border="0" type="image">
              <img alt="" src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/pixel.gif" border="0" height="1" width="1">
            </form>
          </div>
      </div>

      <div id="bot-rcnr">
        <div class="tl"><!-- corner --></div>
      </div>
    </div>

  <script src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/urchin.js" type="text/javascript">
  </script>
  <script type="text/javascript">
  _uacct = "UA-288343-7";
  urchinTracker();
  </script>
  <a class="githublink" href="http://github.com/doctrine"><img src="22.%20Annotations%20Reference%20%E2%80%94%20Doctrine%202%20ORM%202%20documentation_files/forkme_right_orange_ff7600.png" alt="Fork me on GitHub"></a>
  
</body></html>