<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="utf-8">
    <title>Integrating Doctrine 2 with CodeIgniter 2 | Wildly Inaccurate</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:600,300,300italic|The+Girl+Next+Door" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Wildly Inaccurate &raquo; Feed" href="https://wildlyinaccurate.com/feed" />
<link rel="alternate" type="application/rss+xml" title="Wildly Inaccurate &raquo; Comments Feed" href="https://wildlyinaccurate.com/comments/feed" />
<link rel="alternate" type="application/rss+xml" title="Wildly Inaccurate &raquo; Integrating Doctrine 2 with CodeIgniter 2 Comments Feed" href="https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2/feed" />
<link rel='stylesheet' id='mb_style-css'  href='https://wildlyinaccurate.com/wp-content/themes/wildly-minimalistic/style.css' type='text/css' media='all' />
<link rel='next' title='My Top Five Beers' href='https://wildlyinaccurate.com/my-top-five-beers' />
<link rel='canonical' href='https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2' />

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Integrating Doctrine 2 with CodeIgniter 2" />
<meta property="og:url" content="https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2" />
<meta property="og:description" content="If you&#039;re looking for a quick way to get Doctrine 2 running with CodeIgniter 2, you might want to download my CodeIgniter 2/Doctrine 2 package Overview CodeIgniter is a great PHP framework. The cod..." />
<meta property="article:published_time" content="2010-09-25T12:50:14+00:00" />
<meta property="article:modified_time" content="2014-05-21T10:29:23+00:00" />
<meta property="article:author" content="https://wildlyinaccurate.com/author/joe" />
<meta property="og:site_name" content="Wildly Inaccurate" />
<meta property="og:image" content="https://s0.wp.com/i/blank.jpg" />
		<link rel="stylesheet" id="custom-css-css" type="text/css" href="https://wildlyinaccurate.com/?custom-css=1&#038;csblog=1&#038;cscache=6&#038;csrev=22" />
		</head>

<body class="single single-post postid-7 single-format-standard">
    <header id="header">
        <a id="logo" href="https://wildlyinaccurate.com/">Wildly Inaccurate</a>
        <div class="description">Guides &amp; opinions about programming and the state of the web.</div>
    </header>

    <nav id="main-nav">
        <div class="menu-primary-container"><ul id="menu-primary" class="menu"><li id="menu-item-282" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-282"><a href="https://wildlyinaccurate.com/">Latest Posts</a></li>
<li id="menu-item-278" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-278"><a href="https://wildlyinaccurate.com/projects">Projects</a></li>
<li id="menu-item-279" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-279"><a href="https://wildlyinaccurate.com/about">About</a></li>
</ul></div>    </nav>

<section id="main" role="main">

    
        
<article id="post-7" class="post-7 post type-post status-publish format-standard hentry category-codeigniter category-doctrine category-php category-web-development tag-codeigniter-2 tag-combine tag-doctrine-2 tag-guide">
    <h1>Integrating Doctrine 2 with CodeIgniter 2</h1>

    <p class="comments-link"><a href="https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2#comments" title="Comment on Integrating Doctrine 2 with CodeIgniter 2"><span class="dsq-postid" data-dsqidentifier="7 http://eryr.wordpress.com/?p=7">176 Comments</span></a></p>

    <div class="entry">
        <p><em>If you&#8217;re looking for a quick way to get Doctrine 2 running with CodeIgniter 2, you might want to download my <a href="https://github.com/wildlyinaccurate/CodeIgniter-2-with-Doctrine-2">CodeIgniter 2/Doctrine 2 package</a></em></p>
<h2>Overview</h2>
<p>CodeIgniter is a great PHP framework. The codebase is clean, the <a href="http://codeigniter.com/user_guide/">documentation</a> is fantastic, and it&#8217;s regularly updated. Doctrine is a good ORM for the same reasons: it&#8217;s very well-written, has <a href="http://www.doctrine-project.org/projects/orm/2.1/docs/en">extensive documentation</a>, and is actively developed. A combination of these two systems makes it easy to build database-oriented web applications quicker than ever before.</p>
<p>To get started, download <a href="http://codeigniter.com/download.php">CodeIgniter 2</a> and <a href="http://www.doctrine-project.org/projects/orm.html">Doctrine 2</a> – make sure you use the &#8216;Download Archive&#8217; link when downloading Doctrine.</p>
<p><span id="more-7"></span></p>
<h2>Setting up CodeIgniter</h2>
<p>Put all of the CodeIgniter files into a directory on your web server, and configure it to your liking. If you need a guide on how to do this, the best place to look is the <a href="http://codeigniter.com/user_guide/">CodeIgniter User Guide</a>. Keep in mind that Doctrine will load the database configuration from CodeIgniter (application/config/database.php).</p>
<h2>Setting up Doctrine</h2>
<p>Because Doctrine is an entire system in itself, it worked well as a plugin for CodeIgniter 1. Unfortunately one of the major changes to CodeIgniter 2 is the removal of plugins. EllisLab recommends you refactor your plugins as libraries, so that&#8217;s exactly what we will do.</p>
<p>Setting up Doctrine as a CodeIgniter library is fairly simple:</p>
<ol>
<li>Put the Doctrine directory into application/libraries (so that you have a application/libraries/Doctrine directory).</li>
<li>Create the file application/libraries/Doctrine.php. This will be our Doctrine bootstrap as well as the library that CodeIgniter loads.</li>
<li>Copy the following code into Doctrine.php:</li>
</ol>
<pre class="highlight-php">&lt;?php

use Doctrine\Common\ClassLoader,
    Doctrine\ORM\Tools\Setup,
    Doctrine\ORM\EntityManager;

class Doctrine
{
    public $em;

    public function __construct()
    {
        require_once __DIR__ . '/Doctrine/ORM/Tools/Setup.php';
        Setup::registerAutoloadDirectory(__DIR__);

        // Load the database configuration from CodeIgniter
        require APPPATH . 'config/database.php';

        $connection_options = array(
            'driver'        =&gt; 'pdo_mysql',
            'user'          =&gt; $db['default']['username'],
            'password'      =&gt; $db['default']['password'],
            'host'          =&gt; $db['default']['hostname'],
            'dbname'        =&gt; $db['default']['database'],
            'charset'       =&gt; $db['default']['char_set'],
            'driverOptions' =&gt; array(
                'charset'   =&gt; $db['default']['char_set'],
            ),
        );

        // With this configuration, your model files need to be in application/models/Entity
        // e.g. Creating a new Entity\User loads the class from application/models/Entity/User.php
        $models_namespace = 'Entity';
        $models_path = APPPATH . 'models';
        $proxies_dir = APPPATH . 'models/Proxies';
        $metadata_paths = array(APPPATH . 'models');

        // Set $dev_mode to TRUE to disable caching while you develop
        $config = Setup::createAnnotationMetadataConfiguration($metadata_paths, $dev_mode = true, $proxies_dir);
        $this-&gt;em = EntityManager::create($connection_options, $config);

        $loader = new ClassLoader($models_namespace, $models_path);
        $loader-&gt;register();
    }
}</pre>
<p>There are some parts of this file that you might like to modify to suit your needs:</p>
<p><strong>Lines 34-37:</strong></p>
<pre class="highlight-php">$models_namespace = 'Entity';
$models_path = APPPATH . 'models';
$proxies_dir = APPPATH . 'models/Proxies';
$metadata_paths = array(APPPATH . 'models');</pre>
<p>These lines determine where you need to put your model files, and how you instantiate your model classes. With these settings, your models must live in <code>application/models/Entity</code> and be in the <code>Entity</code> namespace. For example instantiating a <code>new Entity\User</code> would load the User class from <code>application/models/Entity/User.php</code></p>
<p><strong>Line 40</strong></p>
<pre class="highlight-php">$config = Setup::createAnnotationMetadataConfiguration($metadata_paths, $dev_mode = true, $proxies_dir);</pre>
<p>This line uses Doctrine&#8217;s <code>Setup</code> class to automatically create the metadata configuration. The <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/metadata-drivers.html">Metadata Driver</a> is what Doctrine uses to interpret your models and map them to the database. In this tutorial I have used the <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/annotations-reference.html">Annotations Driver</a>. If you would like to use a different metadata driver, change <code>createAnnotationMetadataConfiguration</code> to one of the methods below:</p>
<ul>
<li><code>createXMLMetadataConfiguration</code> – Uses the <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/xml-mapping.html">XML Mapping Driver</a></li>
<li><code>createYAMLMetadataConfiguration</code> – Uses the <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/yaml-mapping.html">YAML Mapping Driver</a></li>
</ul>
<p>Notice the <code>$dev_mode</code> variable. This should be true while you are developing, as it does a couple of things:</p>
<ol>
<li>Automatically generates your proxy classes</li>
<li>Uses <code>ArrayCache</code>; a non-persistent caching class</li>
</ol>
<p>Likewise, when <code>$dev_mode</code> is false:</p>
<ol>
<li>Prevents your proxy classes from being overwritten</li>
<li>Attempts to use one of the following persistent caches, in this order: APC, Xcache, Memcache (127.0.0.1:11211), and Redis (127.0.0.1:6379)</li>
</ol>
<h2>Advanced Configuration</h2>
<p>For more advanced configuration, read the <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/configuration.html">Configuration</a> section of the Doctrine documentation.</p>
<h2>Loading Doctrine</h2>
<p>Doctrine can now be loaded in the same way as any other CodeIgniter library:</p>
<pre class="highlight-php">$this-&gt;load-&gt;library('doctrine');</pre>
<p>Once the Doctrine library is loaded, you can retrieve the Entity Manage like so:</p>
<pre class="highlight-php">$em = $this-&gt;doctrine-&gt;em;</pre>
<h2>Defining Models</h2>
<p>Building models using the AnnotationDriver is simple. You can build your classes as if they were regular PHP classes, and define the Doctrine metadata in Docblock annotations.</p>
<pre class="highlight-php">&lt;?php

namespace Entity;

/**
 * @Entity
 * @Table(name="user")
 */
class User
{
     // ...
}</pre>
<p>The <code>@Entity</code> annotation marks this class for <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/basic-mapping.html#persistent-classes">object-relational persistence</a>. If the table name is not specified (using the <code>@Table</code> annotation), Doctrine will create a table with the same name as the class.</p>
<p>Annotations that you will probably use frequently are:</p>
<ul>
<li><code>@Column</code> – Marks a property for object-relational persistence</li>
<li><code>@OneToOne</code>, <code>@ManyToOne</code> and <code>@ManyToMany</code> – Define a relationship between two entities</li>
<li><code>@JoinTable</code> – Used when defining a <code>@ManyToMany</code> relationship to specify the database join table</li>
</ul>
<p>For a full list of the available annotations and their uses, see the <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/annotations-reference.html">Annotation Reference</a></p>
<p>Below are two sample entities that show a basic one-to-many relationship:</p>
<pre class="highlight-php">&lt;?php

namespace Entity;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * @Entity
 * @Table(name="user")
 */
class User
{
    /**
     * @Id
     * @Column(type="integer", nullable=false)
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="string", length=32, unique=true, nullable=false)
     */
    protected $username;

    /**
     * @Column(type="string", length=64, nullable=false)
     */
    protected $password;

    /**
     * @Column(type="string", length=255, unique=true, nullable=false)
     */
    protected $email;

    /**
     * The @JoinColumn is not necessary in this example. When you do not specify
     * a @JoinColumn annotation, Doctrine will intelligently determine the join
     * column based on the entity class name and primary key.
     *
     * @ManyToOne(targetEntity="Group")
     * @JoinColumn(name="group_id", referencedColumnName="id")
     */
    protected $group;
}

/**
 * @Entity
 * @Table(name="group")
 */
class Group
{
    /**
     * @Id
     * @Column(type="integer", nullable=false)
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="string", length=32, unique=true, nullable=false)
     */
    protected $name;

    /**
     * @OneToMany(targetEntity="User", mappedBy="group")
     */
    protected $users;
}</pre>
<p>It is important to note that any mapped properties on your Entities need to be either <code>private</code> or <code>protected</code>, otherwise <a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/architecture.html#entities">lazy-loading might not work as expected</a>. This means that it is necessary to use Java-styled getter and setter methods:</p>
<pre class="highlight-php">public function setUsername($username)
{
    $this-&gt;username = $username;
}

public function getUsername()
{
    return $this-&gt;username;
}</pre>
<p>Thankfully you can save a lot of time and <a href="https://wildlyinaccurate.com/useful-doctrine-2-console-commands#orm-generate-entities">automatically generate these methods</a> using the <code>orm:generate-entities</code> command.</p>
<h2>Setting up the Doctrine Console</h2>
<p>This step is optional, however the Doctrine Console has some very useful commands so I highly recommend setting it up.</p>
<p>All you need to do is create the file application/doctrine.php and copy the following code into it:</p>
<pre class="highlight-php">&lt;?php

define('APPPATH', dirname(__FILE__) . '/');
define('BASEPATH', APPPATH . '/../system/');
define('ENVIRONMENT', 'development');

chdir(APPPATH);

require __DIR__ . '/libraries/Doctrine.php';

foreach ($GLOBALS as $helperSetCandidate) {
    if ($helperSetCandidate instanceof \Symfony\Component\Console\Helper\HelperSet) {
        $helperSet = $helperSetCandidate;
        break;
    }
}

$doctrine = new Doctrine;
$em = $doctrine-&gt;em;

$helperSet = new \Symfony\Component\Console\Helper\HelperSet(array(
    'db' =&gt; new \Doctrine\DBAL\Tools\Console\Helper\ConnectionHelper($em-&gt;getConnection()),
    'em' =&gt; new \Doctrine\ORM\Tools\Console\Helper\EntityManagerHelper($em)
));

\Doctrine\ORM\Tools\Console\ConsoleRunner::run($helperSet);</pre>
<p>On a Linux or Mac, you can now run <code>./application/doctrine</code> from the command line.</p>
<p>If you are on Windows, you can run <code>php.exe application/doctrine.php</code> from the command line. If you are new to running PHP scripts from the command line in Windows, you may want to read <a href="http://php.net/manual/en/install.windows.commandline.php">PHP&#8217;s documentation</a>.</p>
<h2>Using the Doctrine Console</h2>
<p>If you run the Doctrine console with no arguments, you will be presented with a list of the available commands. For now, we are only interested in the <code>orm:schema-tool</code> commands. If you would like to learn about the other commands you can run a command with the <code>--help</code> flag or read my quick <a href="https://wildlyinaccurate.com/useful-doctrine-2-console-commands">Doctrine console overview</a>.</p>
<p><strong>orm:schema-tool:create</strong> will create tables in your database based on your Doctrine models.</p>
<p><strong>orm:schema-tool:drop</strong> will do the exact opposite. It is worth noting that this command will only drop tables which have correlating Doctrine models. Any tables that aren&#8217;t mapped to a Doctrine model will be left alone.</p>
<p><strong>orm:schema-tool:update</strong> will determine if your database schema is out-of-date, and give you the option of updating it. You can execute this command with the <code>--dump-sql</code> flag to see the changes, or the <code>--force</code> flag to execute the changes.</p>
<h2>Using Doctrine</h2>
<p>Once your models are set up and your database is built, you can access your models using the Doctrine EntityManager. I like shortcuts, so I always instantiate the EntityManager in MY_Controller:</p>
<pre class="highlight-php">&lt;?php

class MY_Controller extends Controller
{
    // Doctrine EntityManager
    public $em;

    function __construct()
    {
        parent::__construct();

        // Not required if you autoload the library
        $this-&gt;load-&gt;library('doctrine');

        $this-&gt;em = $this-&gt;doctrine-&gt;em;
    }
}</pre>
<p>Instead of the longer <code>$this-&gt;doctrine-&gt;em</code>, this will allow you to access the EntityManager using <code>$this-&gt;em</code>:</p>
<pre class="highlight-php">$user = new Entity\User;
$user-&gt;setUsername('Joseph');
$user-&gt;setPassword('secretPassw0rd');
$user-&gt;setEmail('josephatwildlyinaccuratedotcom');

$this-&gt;em-&gt;persist($user);
$this-&gt;em-&gt;flush();</pre>
<h2>Final Words</h2>
<p>If you have been spoiled by Doctrine 1&#8217;s magic then you will probably have a hard time wrapping your head around Doctrine 2&#8217;s strict object-oriented approach to everything. When learning your way around a new system, documentation can be your best friend or your worst enemy. Lucky for us, the Doctrine team has written some fantastic documentation. If you are having trouble getting something to work, one of the first things you should do is <abbr title="Read The Manual">RTFM</abbr> (<a href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">Doctrine</a>; <a href="http://codeigniter.com/user_guide/">CodeIgniter</a>).</p>
<p>Good luck, I hope you enjoy using these powerful tools!</p>

        

        
<div class="post-meta">
    Posted in <a href="https://wildlyinaccurate.com/category/programming/php/codeigniter" rel="category tag">CodeIgniter</a>, <a href="https://wildlyinaccurate.com/category/programming/php/doctrine" rel="category tag">Doctrine</a>, <a href="https://wildlyinaccurate.com/category/programming/php" rel="category tag">PHP</a>, <a href="https://wildlyinaccurate.com/category/programming/web-development" rel="category tag">Web Development</a>    and tagged <a href="https://wildlyinaccurate.com/tag/codeigniter-2" rel="tag">codeigniter 2</a>, <a href="https://wildlyinaccurate.com/tag/combine" rel="tag">combine</a>, <a href="https://wildlyinaccurate.com/tag/doctrine-2" rel="tag">doctrine 2</a>, <a href="https://wildlyinaccurate.com/tag/guide" rel="tag">guide</a>    on <span class="date">26 September 2010</span>
    by <span class="author">Joseph</span>.

    </div>

        <p class="gittip">
            Did you find this post useful?
            <script data-gittip-username="wildlyinaccurate" data-gittip-widget="button" src="//gttp.co/v1.js"></script>
        <p>

        <nav class="post-navigation">
            <span class="navigation-next"></span>
            <span class="navigation-previous"><a href="https://wildlyinaccurate.com/my-top-five-beers" rel="next">My Top Five Beers</a> &raquo;</span>
        </nav>
    </div>
</article>

        
<div id="disqus_thread">
            <div id="dsq-content">

            <div class="navigation">
                <div class="nav-previous">
                    <span class="meta-nav">&larr;</span>&nbsp;
                    <a href="https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2/comment-page-2#comments" >Older Comments</a>                </div>
                <div class="nav-next">
                                        &nbsp;<span class="meta-nav">&rarr;</span>
                </div>
            </div> <!-- .navigation -->

            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-4710">
        <div id="dsq-comment-header-4710" class="dsq-comment-header">
            <cite id="dsq-cite-4710">
                <span id="dsq-author-user-4710">Jance Kayre</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4710" class="dsq-comment-body">
            <div id="dsq-comment-message-4710" class="dsq-comment-message"><p>Hi<br />
Seriously, this tutorial is awesome! I&#8217;ve managed more than I did by myself.</p>
<p>I just have a question : i got this error when I create a objet User :</p>
<p>exception &#8216;DoctrineCommonPersistenceMappingMappingException&#8217; with message &#8216;No mapping file found named &#8216;Entity.User.dcm.yml&#8217; for class &#8216;EntityUser&#8217;.&#8217; in /var/www/site/application/libraries/Doctrine/Common/Persistence/Mapping/MappingException.php:74</p>
<p>But the thing is that my mapping files haven&#8217;t any &#8220;Entity.****&#8221;<br />
And I don &#8216;t understand why ?<br />
If someone could help me or show me the direction to follow</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4709">
        <div id="dsq-comment-header-4709" class="dsq-comment-header">
            <cite id="dsq-cite-4709">
                <span id="dsq-author-user-4709">Guest</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4709" class="dsq-comment-body">
            <div id="dsq-comment-message-4709" class="dsq-comment-message"><p>Hi<br />
Seriously, this tutorial is exceptional ! I&#8217;ve managed more than I did by myself.</p>
<p>I just have a question : i got this error when I create a objet User :</p>
<p>exception &#8216;DoctrineCommonPersistenceMappingMappingException&#8217; with message &#8216;No mapping file found named &#8216;Entity.User.dcm.yml&#8217; for class &#8216;EntityUser&#8217;.&#8217; in /var/www/site/application/libraries/Doctrine/Common/Persistence/Mapping/MappingException.php:74</p>
<p>But the thing is that my mapping files haven&#8217;t any &#8220;Entity.****&#8221;<br />
And I don &#8216;t understand why ?<br />
If someone could help me or show me the direction to follow</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4674">
        <div id="dsq-comment-header-4674" class="dsq-comment-header">
            <cite id="dsq-cite-4674">
                <span id="dsq-author-user-4674">suresh varman</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4674" class="dsq-comment-body">
            <div id="dsq-comment-message-4674" class="dsq-comment-message"><p>Excellent tutorial i love it thank you friend..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4476">
        <div id="dsq-comment-header-4476" class="dsq-comment-header">
            <cite id="dsq-cite-4476">
                <span id="dsq-author-user-4476">Inaamul Hassan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4476" class="dsq-comment-body">
            <div id="dsq-comment-message-4476" class="dsq-comment-message"><p>Thank you frd..awsome tutorial</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4467">
        <div id="dsq-comment-header-4467" class="dsq-comment-header">
            <cite id="dsq-cite-4467">
                <span id="dsq-author-user-4467">bavon mike</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4467" class="dsq-comment-body">
            <div id="dsq-comment-message-4467" class="dsq-comment-message"><p>Thanks so much&#8230;works fine</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4460">
        <div id="dsq-comment-header-4460" class="dsq-comment-header">
            <cite id="dsq-cite-4460">
                <span id="dsq-author-user-4460">Vladimir Runchev</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4460" class="dsq-comment-body">
            <div id="dsq-comment-message-4460" class="dsq-comment-message"><p>I followed the tutorial exactly as you wrote. I am able to get the Entity Manager in my Codeigniter controllers.<br />
Here is the Doctrine.php:</p>
<p>        $models_namespace = &#8216;Entity';<br />
        $models_path = APPPATH . &#8216;models';<br />
        $proxies_dir = APPPATH . &#8216;models/Proxies';<br />
        $metadata_paths = array(APPPATH . &#8216;models/Entity&#8217;);<br />
        $config = Setup::createAnnotationMetadataConfiguration($metadata_paths, $dev_mode = true, $proxies_dir);<br />
        $this-&gt;em = EntityManager::create($connection_options, $config);</p>
<p>I can read an Entity out of a database:</p>
<p>//This is in the Test Controller</p>
<p>        $this-&gt;load-&gt;library(&#8216;doctrine&#8217;);<br />
        $em = $this-&gt;doctrine-&gt;em;</p>
<p>        $repo = $em-&gt;getRepository(&#8216;EntityUser&#8217;);<br />
        $user = $repo-&gt;findByEmail(&#8216;vlatkorun@gmail.com&#8217;);</p>
<p>If I do var_dump($user) I can see that the $user object is populated with data from the database. But if I try:<br />
echo $user-&gt;getEmail();</p>
<p>I get an error:<br />
function getEmail() on a non-object</p>
<p>Why is this error appearing? I am able to insert data in the Database also with creating a new EntityUser object and running $em-&gt;flush().</p>
<p>I forgot to mention that Doctrine is not auto-generating/creating the Proxy classes at all. Maybe this is the source of the error because the $user needs to be a Proxy class?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-4663">
        <div id="dsq-comment-header-4663" class="dsq-comment-header">
            <cite id="dsq-cite-4663">
                <span id="dsq-author-user-4663">pernelle sebastien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4663" class="dsq-comment-body">
            <div id="dsq-comment-message-4663" class="dsq-comment-message"><p>i have the same problem , have you the solution ?</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4423">
        <div id="dsq-comment-header-4423" class="dsq-comment-header">
            <cite id="dsq-cite-4423">
http://marcamon.fr/                <span id="dsq-author-user-4423">Jean-Marc Amon</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4423" class="dsq-comment-body">
            <div id="dsq-comment-message-4423" class="dsq-comment-message"><p>Thanks so much for this</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4419">
        <div id="dsq-comment-header-4419" class="dsq-comment-header">
            <cite id="dsq-cite-4419">
                <span id="dsq-author-user-4419">Miles</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4419" class="dsq-comment-body">
            <div id="dsq-comment-message-4419" class="dsq-comment-message"><p>Hey Joseph, thank you for your tuts, very instructive and usefull.<br />
Nevertheless, I can&#8217;t get it to work properly when willing to retrieve let&#8217;s say a user from the User table, whom model is stored in Entity/User.php. Can you help me sorting that out please ?<br />
I&#8217;m doing:</p>
<p>			$em = $this-&gt;doctrine-&gt;em;</p>
<p>			$row = $em-&gt;getRepository(&#8216;Entity/User&#8217;)-&gt;findBy(array(&#8216;email&#8217; =&gt; $email));</p>
<p>after loading the Doctrine Library but I have a Entity/User model doesn&#8217;t exist.</p>
<p>Why ?</p>
<p>Thanks</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-4420">
        <div id="dsq-comment-header-4420" class="dsq-comment-header">
            <cite id="dsq-cite-4420">
                <span id="dsq-author-user-4420">wildlyinaccurate</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4420" class="dsq-comment-body">
            <div id="dsq-comment-message-4420" class="dsq-comment-message"><p>Hi Miles,</p>
<p>It&#8217;s hard to tell what&#8217;s going on without seeing your entire setup. From the info you&#8217;ve given me, I&#8217;d guess that the User model isn&#8217;t in the Entity namespace? If you&#8217;re still having trouble, try working from the sample setup I&#8217;ve got here: <a href="https://github.com/wildlyinaccurate/CodeIgniter-2-with-Doctrine-2" rel="nofollow">https://github.com/wildlyinaccurate/CodeIgniter-2-with-Doctrine-2</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4414">
        <div id="dsq-comment-header-4414" class="dsq-comment-header">
            <cite id="dsq-cite-4414">
                <span id="dsq-author-user-4414">Sharaz Khan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4414" class="dsq-comment-body">
            <div id="dsq-comment-message-4414" class="dsq-comment-message"><p>Would be also great if you could provide some example of doctrine queries with select , update , delete , joins etc..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4413">
        <div id="dsq-comment-header-4413" class="dsq-comment-header">
            <cite id="dsq-cite-4413">
                <span id="dsq-author-user-4413">Sharaz Khan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4413" class="dsq-comment-body">
            <div id="dsq-comment-message-4413" class="dsq-comment-message"><p>Excellent tutorial.. Great work!!!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4343">
        <div id="dsq-comment-header-4343" class="dsq-comment-header">
            <cite id="dsq-cite-4343">
                <span id="dsq-author-user-4343">lilo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4343" class="dsq-comment-body">
            <div id="dsq-comment-message-4343" class="dsq-comment-message"><p>Thanks, but in Doctrine.php, where is Line46 and Line 48?!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-4345">
        <div id="dsq-comment-header-4345" class="dsq-comment-header">
            <cite id="dsq-cite-4345">
                <span id="dsq-author-user-4345">wildlyinaccurate</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4345" class="dsq-comment-body">
            <div id="dsq-comment-message-4345" class="dsq-comment-message"><p>Sorry, I had the line numbers wrong! I&#8217;ve updated them now.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-4346">
        <div id="dsq-comment-header-4346" class="dsq-comment-header">
            <cite id="dsq-cite-4346">
                <span id="dsq-author-user-4346">lilo</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4346" class="dsq-comment-body">
            <div id="dsq-comment-message-4346" class="dsq-comment-message"><p>Ok thanks :)</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4319">
        <div id="dsq-comment-header-4319" class="dsq-comment-header">
            <cite id="dsq-cite-4319">
http://sportannica.com/                <span id="dsq-author-user-4319">Lance Newman</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4319" class="dsq-comment-body">
            <div id="dsq-comment-message-4319" class="dsq-comment-message"><p>I tried using &#8220;$this-&gt;load-&gt;library(&#8216;doctrine&#8217;);</p>
<p>       			$this-&gt;em = $this-&gt;doctrine-&gt;em;&#8221;</p>
<p>and got the following. I don&#8217;t even see a folder in the Doctrine download called &#8220;common&#8221;</p>
<p>A PHP Error was encountered</p>
<p>Severity: Warning</p>
<p>Message: require_once(/Applications/MAMP/htdocs/CodeIgniter/application/libraries/Doctrine/Common/ClassLoader.php): failed to open stream: No such file or directory</p>
<p>Filename: Tools/Setup.php</p>
<p>Line Number: 47</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-4265">
        <div id="dsq-comment-header-4265" class="dsq-comment-header">
            <cite id="dsq-cite-4265">
http://www.yaronguez.com                <span id="dsq-author-user-4265">Yaron Guez</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4265" class="dsq-comment-body">
            <div id="dsq-comment-message-4265" class="dsq-comment-message"><p>This tutorial is a life saver.  Thanks so much!  When I use the command line function orm:schema-tool:create I get an error Fatal error: Class &#8216;CI_Model&#8217; not found in [..application path..]/models/demo_auth_admin_model.php on line 3.  demo_auth_admin is a standard CodeIgniter model I&#8217;m already using separate from Doctrine.  When I modify Doctrine.php and change the $metadata_paths to array(APPPATH . &#8216;models/Entity&#8217;) this problem goes away and the update seems to work fine.  Is this the correct way to address this problem?  Thanks again!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-4267">
        <div id="dsq-comment-header-4267" class="dsq-comment-header">
            <cite id="dsq-cite-4267">
                <span id="dsq-author-user-4267">wildlyinaccurate</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4267" class="dsq-comment-body">
            <div id="dsq-comment-message-4267" class="dsq-comment-message"><p>Hey Yaron, the paths depend on where your entities are and which namespace they&#8217;re in, but if &#8216;models/Entity&#8217; works for you then that&#8217;s fine! Glad you got it working.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-4271">
        <div id="dsq-comment-header-4271" class="dsq-comment-header">
            <cite id="dsq-cite-4271">
http://www.yaronguez.com                <span id="dsq-author-user-4271">Yaron Guez</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4271" class="dsq-comment-body">
            <div id="dsq-comment-message-4271" class="dsq-comment-message"><p>Thanks for the reply!  But I really think you should update the tutorial to reflect this fact.  I followed the instructions exactly&#8230;to the letter, and received an error when running the command line tool to create the schema.  If users create their entities within the model/Entity folder, like you suggest, and have any other native CodeIgniter models in the model folder, which they most likely will, they too will have this error.  Since all of the entities are within the model/Entity folder then you should instruct Doctrine to use this folder, and not the parent model folder, as the path for metadata when creating the schema.  Otherwise the command line tool will try to parse all of your native CodeIgniter models as well and will fail.  Of course I could be mistaken and please correct me if I am.  Thanks again for your help!</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-4" id="dsq-comment-4277">
        <div id="dsq-comment-header-4277" class="dsq-comment-header">
            <cite id="dsq-cite-4277">
                <span id="dsq-author-user-4277">wildlyinaccurate</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4277" class="dsq-comment-body">
            <div id="dsq-comment-message-4277" class="dsq-comment-message"><p>Ah yes, I see what you mean now &#8211; Doctrine was trying to load metadata from your non-Doctrine models, because we&#8217;ve specified the metadata path as <code>APPPATH . 'models'</code> instead of <code>APPPATH . 'models/Entity'</code>.</p>
<p>I&#8217;ll update the tutorial after I&#8217;ve tested this on a few of my projects. Thanks for taking the time to explain it!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4220">
        <div id="dsq-comment-header-4220" class="dsq-comment-header">
            <cite id="dsq-cite-4220">
                <span id="dsq-author-user-4220">Dennis van Meel</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4220" class="dsq-comment-body">
            <div id="dsq-comment-message-4220" class="dsq-comment-message"><p>I just installed your package in Netbeans and changed the db information in my config/database.php file. Tried to persist the data but I just get an internal server error (500). I run a localhost server on MAMP and didn&#8217;t change a thing in the code. Could you help me out? The tutorial was very good, and I think the most up-to-date one that can be found on google. Great Job!</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="post pingback">
        <p>Pingback: <a href='http://www.ofcodeprogramming.com/19663/can39t-find-entity-model-in-doctrine-2-codeigniter-2' rel='external nofollow' class='url'>Can#39;t find entity model in Doctrine 2 / CodeIgniter 2 | Code and Programming</a>()</p>
    </li>
    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4209">
        <div id="dsq-comment-header-4209" class="dsq-comment-header">
            <cite id="dsq-cite-4209">
http://www.facebook.com/wesley.murch                <span id="dsq-author-user-4209">Wes Murch</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4209" class="dsq-comment-body">
            <div id="dsq-comment-message-4209" class="dsq-comment-message"><p>I believe you have an error in your tutorial:</p>
<p>$user = new modelsUser;</p>
<p>Should be:</p>
<p>$user = new EntityUser;</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4200">
        <div id="dsq-comment-header-4200" class="dsq-comment-header">
            <cite id="dsq-cite-4200">
                <span id="dsq-author-user-4200">piter lelaona</span>
            </cite>
        </div>
        <div id="dsq-comment-body-4200" class="dsq-comment-body">
            <div id="dsq-comment-message-4200" class="dsq-comment-message"><p>I find the concept hmvc here <a href="https://github.com/rubensarrio/codeigniter-hmvc-doctrine" rel="nofollow">https://github.com/rubensarrio/codeigniter-hmvc-doctrine</a><br />
but still using version 2.1 of doctrine, I tried to upgrade to doctrine2.3 version  but found a lot of errors. how to fix it &#8230; thank you very much. I really appreciate it..<br />
sory about my english.. i am from indonesia.. :)</p>
</div>
        </div>

    </li><!-- #comment-## -->
            </ul>

            <div class="navigation">
                <div class="nav-previous">
                    <span class="meta-nav">&larr;</span>
                    &nbsp;<a href="https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2/comment-page-2#comments" >Older Comments</a>                </div>
                <div class="nav-next">
                                        &nbsp;<span class="meta-nav">&rarr;</span>
                </div>
            </div><!-- .navigation -->

        </div>

    </div>

<script type="text/javascript">
var disqus_url = 'https://wildlyinaccurate.com/integrating-doctrine-2-with-codeigniter-2';
var disqus_identifier = '7 http://eryr.wordpress.com/?p=7';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'wildlyinaccurate';
var disqus_title = "Integrating Doctrine 2 with CodeIgniter 2";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=7';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>


    
</section> <!-- /#main -->

        <div id="sidebar">
            <aside>
    <section id="text-3" class="widget widget_text">			<div class="textwidget"><div id="carbonads-container">
  <script async src="//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=wildlyinaccuratecom" id="_carbonads_js"></script>
</div>

<script>
(function() {
  if (document.body.className.indexOf('page') === -1) {
    var ad = document.getElementById('carbonads-container');

    try {
      var paragraph = document.querySelectorAll('.entry > p')[1];

      paragraph.parentNode.insertBefore(ad, paragraph.nextSibling);
      ad.className = ad.className + ' inside-content';
    } catch (e) {}
  }
})();  
</script></div>
		</section></aside>
        </div> <!-- /#sidebar -->

        <footer id="footer">
            <section id="text-5" class="widget widget_text">			<div class="textwidget"><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-20744182-3', 'wildlyinaccurate.com');
  ga('send', 'pageview');

</script></div>
		</section><section id="text-7" class="widget widget_text">			<div class="textwidget"><script>
// It pains me to do this.
try {
  var commentsLink = document.querySelector('.comments-link a');

  commentsLink.href = commentsLink.href.replace('#comments', '#disqus_thread');
} catch (e) {}
</script></div>
		</section>        </footer> <!-- /#footer -->

                <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'wildlyinaccurate';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type='text/javascript' src='https://wildlyinaccurate.com/wp-includes/js/comment-reply.min.js'></script>
<script type='text/javascript' src='https://s0.wp.com/wp-content/js/devicepx-jetpack.js'></script>

        <script src="https://wildlyinaccurate.com/wp-content/themes/wildly-minimalistic/scripts/main.js"></script>
    </body>
</html>
